{"version":3,"sources":["js/components/example.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","js/components/tabs.js","js/components/accordion.js","js/components/modal.js","js/index.js"],"names":["Example","title","content","prototype","generateExampleMarkup","shortid","require","Tabs","data","id","generate","filter","item","current","length","map","handleTabClick","event","preventDefault","target","tabElems","dataset","tabid","classList","add","remove","bodyElems","generateTabsMarkup","markup","tabAnchors","tabContents","i","init","tabContainer","document","querySelector","Array","from","querySelectorAll","contains","attachEvents","addEventListener","bind","Accordion","handleAccordionClick","titleElems","accid","generateAccordionMarkup","container","Modal","modalOpen","console","log","modalElem","modalClose","handleModalKeyUp","defaultPrevented","key","keyCode","handleModalClickOut","closest","generateModalMarkup","modalOpenBtn","modalCloseBtn","app","tabsData1","tabs1","tabsEx1","tabsData2","tabs2","tabsEx2","insertAdjacentHTML","accData1","acc1","accEx1","accData2","acc2","accEx2","modal1","modalEx1","modal2","modalEx2","nestedTabs1","nestedTabs2","nestedAccData","nestedAcc","nestedModal","nextedExample"],"mappings":"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","file":"js.24de5d64.js","sourceRoot":"../src","sourcesContent":["// The Example Component\nexport function Example(title, content) {\n  this.title = title;\n  this.content = content;\n}\n\nExample.prototype.generateExampleMarkup = function() {\n  return `\n    <div class=\"example-wrapper\">\n      <h2>Example: ${this.title}</h2>\n      <div class=\"example\">${this.content}</div>\n    </div>\n  `;\n};","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  size = +size\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","const shortid = require('shortid'); \n\n// Tabs Component Constructor\nexport function Tabs(data) {\n  this.data = data;\n  this.id = shortid.generate();\n\n  // Set the current tab if not set\n  let currentTabList = this.data.filter(item => item.current === true);\n  if (currentTabList.length <= 0) {\n    this.data[0].current = true;\n  }\n  \n  // generate an ID for each tab\n  this.data.map(item => item.id = shortid.generate());\n}\n\n// Generates the HTML Markup for the tabs\nTabs.prototype.generateTabsMarkup = function() {\n  let markup = `<div class=\"tabs-container\" id=\"tabs-${this.id}\">`;\n\n  let tabAnchors = `<ul class=\"tabs-list\">`;\n  let tabContents = ``;\n  for (let i = 0; i < this.data.length; i++) {\n    let item = this.data[i];\n    let current = '';\n    if (item.current === true) {\n      current = ' current'\n    }\n    tabAnchors += `<li class=\"tab${current}\" data-tabid=\"${item.id}\">${item.title}</li>`;\n    tabContents += `<div class=\"tab-body${current}\" data-tabid=\"${item.id}\">${item.content}</div>`;\n  }\n  tabAnchors += `</ul>`;\n\n  markup += `${tabAnchors}${tabContents}</div>`;\n\n  return markup;\n};\n\n// Setup the elements\nTabs.prototype.init = function() {\n  // cache references to the container, tabs, and bodies\n  this.tabContainer = document.querySelector(`#tabs-${this.id}`);\n  this.tabElems     = Array.from(this.tabContainer.querySelectorAll('.tab'));\n  this.bodyElems    = Array.from(this.tabContainer.querySelectorAll('.tab-body'));\n\n  // hide all the but the current body\n  this.bodyElems.map(item => {\n    if (!item.classList.contains('current')) {\n      item.classList.add('hide');\n    }\n  });\n\n  this.attachEvents();\n}\n\n// Attach events to tabs\nTabs.prototype.attachEvents = function() {\n  // atach a click event to each tab\n  this.tabElems.map(item => {\n    item.addEventListener('click', handleTabClick.bind(this));\n  });\n};\n\nfunction handleTabClick(event) {\n  event.preventDefault();\n  const target = event.target;\n\n  this.tabElems.map(item => {\n    if (item.dataset.tabid === target.dataset.tabid) {\n      item.classList.add('current');\n    } else {\n      item.classList.remove('current');\n    }\n  });\n\n  this.bodyElems.map(item => {\n    if (item.dataset.tabid === target.dataset.tabid) {\n      item.classList.add('current');\n      item.classList.remove('hide');\n    } else {\n      item.classList.remove('current');\n      item.classList.add('hide');\n    }\n  });\n}","const shortid = require('shortid'); \n\n// Accordion Component Constructor\nexport function Accordion(data) {\n  this.data = data;\n  this.id = shortid.generate();\n\n  // Set the current panel if not set\n  let currentPanelList = this.data.filter(item => item.current === true);\n  if (currentPanelList.length <= 0) {\n    this.data[0].current = true;\n  }\n  \n  // generate an ID for each panel\n  this.data.map(item => item.id = shortid.generate());\n}\n\n// Generates the HTML Markup for the accordion\nAccordion.prototype.generateAccordionMarkup = function() {\n  let markup = `<div class=\"accordion-container\" id=\"accordion-${this.id}\">`;\n\n  markup += `<dl class=\"accordion-list\">`;\n  for (let i = 0; i < this.data.length; i++) {\n    let item = this.data[i];\n    let current = '';\n    if (item.current === true) {\n      current = ' current'\n    }\n    markup += `<dt class=\"${current}\" data-accid=\"${item.id}\">${item.title}</dt>`;\n    markup += `<dd class=\"${current}\" data-accid=\"${item.id}\">${item.content}</dd>`;\n  }\n  markup += `</dl>`;\n\n  markup += `</div>`;\n\n  return markup;\n};\n\n// Setup the elements\nAccordion.prototype.init = function() {\n  // cache references to the container, tabs, and bodies\n  this.container  = document.querySelector(`#accordion-${this.id}`);\n  this.titleElems = Array.from(this.container.querySelectorAll('dt'));\n  this.bodyElems  = Array.from(this.container.querySelectorAll('dd'));\n\n  // hide all the but the current body\n  this.bodyElems.map(item => {\n    if (!item.classList.contains('current')) {\n      item.classList.add('hide');\n    }\n  });\n\n  this.attachEvents();\n};\n\n// Attach events to tabs\nAccordion.prototype.attachEvents = function() {\n  // atach a click event to each item\n  this.titleElems.map(item => {\n    item.addEventListener('click', handleAccordionClick.bind(this));\n  });\n}\n\nfunction handleAccordionClick(event) {\n  event.preventDefault();\n  const target = event.target;\n\n  this.titleElems.map(item => {\n    if (item.dataset.accid === target.dataset.accid) {\n      item.classList.add('current');\n    } else {\n      item.classList.remove('current');\n    }\n  });\n\n  this.bodyElems.map(item => {\n    if (item.dataset.accid === target.dataset.accid) {\n      item.classList.add('current');\n      item.classList.remove('hide');\n    } else {\n      item.classList.remove('current');\n      item.classList.add('hide');\n    }\n  });\n}","const shortid = require('shortid'); \n\n// Modal Component Constructor\nexport function Modal(title, content) {\n  this.title = title;\n  this.content = content;\n  this.id = shortid.generate();\n}\n\n// Generates the HTML Markup for the modal\nModal.prototype.generateModalMarkup = function() {\n  let markup = `\n    <button class=\"modal-open\" data-modalid=\"${this.id}\">Open</button>\n    <div class=\"modal hide\" id=\"modal-${this.id}\">\n      <div class=\"modal-title\">\n        <h4>${this.title}</h4>\n        <button class=\"modal-close\">&times;</button>\n      </div> \n      <div class=\"modal-content\">${this.content}</div>\n    </div>`;\n\n  return markup;\n};\n\n// Setup the elements\nModal.prototype.init = function() {\n  // cache references to the modal and buttons\n  this.modalElem     = document.querySelector(`#modal-${this.id}`);\n  this.modalOpenBtn  = document.querySelector(`button[data-modalid=\"${this.id}\"]`);\n  this.modalCloseBtn = this.modalElem.querySelector('.modal-close');\n\n  this.attachEvents();\n}\n\n// Attach events to modal buttons\nModal.prototype.attachEvents = function() {\n  this.modalOpenBtn.addEventListener('click', modalOpen.bind(this));\n  this.modalCloseBtn.addEventListener('click', modalClose.bind(this));\n  document.addEventListener('keyup', handleModalKeyUp.bind(this));\n  document.addEventListener('click', handleModalClickOut.bind(this));\n};\n\nfunction modalOpen(event) {\n  event.preventDefault();\n  console.log('Modal Open Called');\n  this.modalElem.classList.remove('hide');\n}\n\nfunction modalClose(event) {\n  event.preventDefault();\n  console.log('Modal Closed Called');\n  this.modalElem.classList.add('hide');\n}\n\nfunction handleModalKeyUp(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  const key = event.key || event.keyCode;\n\n  if (key === 'Escape' || key === 'Esc' || key === 27) {\n    this.modalElem.classList.add('hide');\n  }\n}\n\nfunction handleModalClickOut(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  \n  if (event.target.closest(`#modal-${this.id}`)) return;\n  this.modalElem.classList.add('hide');\n}","import { Example } from './components/example';\nimport { Tabs } from './components/tabs';\nimport { Accordion } from './components/accordion';\nimport { Modal } from './components/modal';\n\n// Get the app Element\nconst app = document.querySelector('#app');\n\n// ===============\n// Tabs\n// ===============\n\n// Create New Tab Examples\nconst tabsData1 = [\n  {\n    title: 'Tab One',\n    content: 'Tab One Content: Veniam culpa nisi id ad incididunt laborum occaecat ad ea sit amet fugiat ea nostrud.'\n  },\n  {\n    title: 'Tab Two',\n    content: 'Tab Two Content: Commodo non aute magna consequat adipisicing laboris esse officia.'\n  },\n  {\n    title: 'Tab Three',\n    content: 'Tab Three Content: Et culpa eiusmod magna proident labore duis commodo mollit minim ut eu minim.'\n  },\n];\nconst tabs1 = new Tabs(tabsData1);\nconst tabsEx1 = new Example(\"Tabs 1\", tabs1.generateTabsMarkup());\n\nconst tabsData2 = [\n  {\n    title: 'Tab 1',\n    content: 'Tab 1 Content: Incididunt nulla ut nisi incididunt magna.'\n  },\n  {\n    title: 'Tab 2',\n    content: 'Tab 2 Content: Enim pariatur aliqua ad est ut culpa est aliqua dolore tempor velit esse nisi.',\n    current: true\n  },\n  {\n    title: 'Tab 3',\n    content: 'Tab 3 Content: Magna nisi reprehenderit Lorem duis.'\n  },\n];\nconst tabs2 = new Tabs(tabsData2);\nconst tabsEx2 = new Example(\"Tabs 2\", tabs2.generateTabsMarkup());\n\n// Add the tabs examples to the page\napp.insertAdjacentHTML('beforeend', tabsEx1.generateExampleMarkup());\napp.insertAdjacentHTML('beforeend', tabsEx2.generateExampleMarkup());\n\n// Initialize the tab examples\ntabs1.init();\ntabs2.init();\n\n\n// ===============\n// Accordions\n// ===============\n\n\n// Create New Tab Examples\nconst accData1 = [\n  {\n    title: 'Accordion One',\n    content: 'Accordion One Content: Veniam culpa nisi id ad incididunt laborum occaecat ad ea sit amet fugiat ea nostrud.'\n  },\n  {\n    title: 'Accordion Two',\n    content: 'Accordion Two Content: Commodo non aute magna consequat adipisicing laboris esse officia.'\n  },\n  {\n    title: 'Accordion Three',\n    content: 'Accordion Three Content: Et culpa eiusmod magna proident labore duis commodo mollit minim ut eu minim.'\n  },\n];\nconst acc1 = new Accordion(accData1);\nconst accEx1 = new Example(\"Accordion 1\", acc1.generateAccordionMarkup());\n\nconst accData2 = [\n  {\n    title: 'Accordion 1',\n    content: 'Accordion 1 Content: Incididunt nulla ut nisi incididunt magna.'\n  },\n  {\n    title: 'Accordion 2',\n    content: 'Accordion 2 Content: Enim pariatur aliqua ad est ut culpa est aliqua dolore tempor velit esse nisi.',\n    current: true\n  },\n  {\n    title: 'Accordion 3',\n    content: 'Accordion 3 Content: Magna nisi reprehenderit Lorem duis.'\n  },\n];\nconst acc2 = new Accordion(accData2);\nconst accEx2 = new Example(\"Accordion 2\", acc2.generateAccordionMarkup());\n\n// Add the accordion examples to the page\napp.insertAdjacentHTML('beforeend', accEx1.generateExampleMarkup());\napp.insertAdjacentHTML('beforeend', accEx2.generateExampleMarkup());\n\n// Initialize the Accordion examples\nacc1.init();\nacc2.init();\n\n// ===============\n// Modals\n// ===============\n\n// Create New Modal Examples\nconst modal1 = new Modal('Modal One', 'Modal One Content: Veniam ad cupidatat Lorem nostrud ullamco commodo reprehenderit ut ut.');\nconst modalEx1 = new Example('Modal One', modal1.generateModalMarkup());\nconst modal2 = new Modal('Modal Two', 'Modal Two Content: Laboris voluptate commodo officia minim voluptate exercitation ullamco anim nostrud deserunt ex laborum nisi.');\nconst modalEx2 = new Example('Modal Two', modal2.generateModalMarkup());\n\n// Add the modal exmaples to the page\napp.insertAdjacentHTML('beforeend', modalEx1.generateExampleMarkup());\napp.insertAdjacentHTML('beforeend', modalEx2.generateExampleMarkup());\n\n// Initialize the Mocal examples\nmodal1.init();\nmodal2.init();\n\n// ===============\n// Nested Example\n// ===============\n\nconst nestedTabs1 = new Tabs(tabsData1);\nconst nestedTabs2 = new Tabs(tabsData2);\nconst nestedAccData = [\n  {\n    title: 'Nested Accordion 1',\n    content: nestedTabs1.generateTabsMarkup()\n  },\n  {\n    title: 'Nested Accordion 2',\n    content: nestedTabs2.generateTabsMarkup()\n  }\n];\nconst nestedAcc = new Accordion(nestedAccData);\nconst nestedModal = new Modal('Nested Modal',\n  nestedAcc.generateAccordionMarkup()\n);\nconst nextedExample = new Example('Nested Example', nestedModal.generateModalMarkup());\n\napp.insertAdjacentHTML('beforeend', nextedExample.generateExampleMarkup());\n\nnestedTabs1.init();\nnestedTabs2.init();\nnestedAcc.init();\nnestedModal.init();\n"]}